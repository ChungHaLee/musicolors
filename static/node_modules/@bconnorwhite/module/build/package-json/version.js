"use strict";

exports.__esModule = true;
exports.getVersion = getVersion;
exports.getVersionSync = getVersionSync;

var _ = require(".");

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

function getVersion(_x) {
  return _getVersion.apply(this, arguments);
}

function _getVersion() {
  _getVersion = _asyncToGenerator(function* (dirname) {
    return (0, _.getPackageJSON)(dirname).then(function (pkg) {
      return pkg == null ? void 0 : pkg.version;
    });
  });
  return _getVersion.apply(this, arguments);
}

function getVersionSync(dirname) {
  var _getPackageJSONSync;

  return (_getPackageJSONSync = (0, _.getPackageJSONSync)(dirname)) == null ? void 0 : _getPackageJSONSync.version;
}